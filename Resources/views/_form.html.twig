{% trans_default_domain "victoire" %}
{{ form_start(form) }}

<div id="table-data" data-ordered="{{ form.rows|length }}" data-abscissa="{{ form.columnFields|length }}"></div>
<div class="row">
    <div class="col-sm-12">
        <div id="values-redactor-toolbar"></div>
        <ul class="table" id="table">
            <li>
                <ul class="vic-table-row">
                    <li class="vic-table-square"></li>

                    <li class="vic-table-square"></li>

                    {% for fieldColumn in form.columnFields %}
                    <li class="vic-table-square -action" data-abscissa="{{ loop.index0 }}">
                        {% spaceless %}
                            <div class="table-btn -remove table-move-left-column" data-abscissa="{{ loop.index0 }}">
                                <i class="fa fa-arrow-left"></i>
                            </div>
                            <button class="table-btn -remove table-delete-column" data-abscissa="{{ loop.index0 }}">
                                <i class="fa fa-minus-square-o"></i>
                            </button>
                            <div class="table-btn -remove table-move-right-column" data-abscissa="{{ loop.index0 }}">
                                <i class="fa fa-arrow-right"></i>
                            </div>
                        {% endspaceless %}
                    </li>
                    {% endfor %}

                    <li class="vic-table-square -action table-column-placeholder table-column-highlight" id="table-add-column">
                        {% spaceless %}
                        <button class="table-btn" id="table-add-column-btn" data-prototype="{{ form_widget(form.columnFields.vars.prototype.val)|e }}"data-option-prototype="{{ _self.widget_field_option(form.columnFields.vars.prototype.option)|e }}">
                            <i class="fa fa-plus-square-o"></i>
                        </button>
                        {% endspaceless %}
                    </li>
                </ul>
            </li>

            <li>
                <ul class="vic-table-row">
                    <li class="vic-table-square"></li>

                    <li class="vic-table-square"></li>

                    {% for fieldColumn in form.columnFields %}
                    <li class="vic-table-square -field" data-abscissa="{{ loop.index0 }}">
                        {{ form_widget(fieldColumn.val) }}
                    </li>
                    {% endfor %}

                    <li class="vic-table-square table-column-highlight" id="table-row-field-placeholder"></li>
                </ul>
            </li>

            {% for row in form.rows %}
            <li data-ordered="{{ loop.index0 }}">
                <ul class="vic-table-row">
                    <li class="vic-table-square -action" data-ordered="{{ loop.index0 }}">
                        {% spaceless %}
                        <button class="table-btn -remove table-delete-row" data-ordered="{{ loop.index0 }}">
                            <i class="fa fa-minus-square-o"></i>
                        </button>
                        <div class="table-btn -remove table-move-up-row" data-abscissa="{{ loop.index0 }}">
                            <i class="fa fa-arrow-up"></i>
                        </div>
                        <div class="table-btn -remove table-move-down-row" data-abscissa="{{ loop.index0 }}">
                            <i class="fa fa-arrow-down"></i>
                        </div>
                        {% endspaceless %}
                    </li>

                    {{ _self.widget_prototype(row, loop) }}

                    <li class="vic-table-square table-placeholder-row table-column-highlight" data-ordered="{{ loop.index0 }}"></li>
                </ul>
            </li>
            {% endfor %}

            <li>
                <ul class="vic-table-row vic-table-row-highlight" id="vic-table-row-placeholder">
                    <li class="vic-table-square -action " id="table-add-row">
                        {% spaceless %}
                        <button  class="table-btn" id="table-add-row-btn" data-prototype="{{ _self.widget_prototype(form.rows.vars.prototype)|e }}" data-value-prototype="{{ _self.widget_value_prototype(form.rows.vars.prototype.values.vars.prototype)|e }}">
                            <i class="fa fa-plus-square-o"></i>
                        </button>
                        {% endspaceless %}
                    </li>
                    <li class="vic-table-square vic-table-row-highlight" id="table-delete-row-placeholder">{{_self.widget_field_option(form.option)}}</li>

                    {% for fieldRow in form.columnFields %}
                    <li class="vic-table-square table-placeholder-column vic-table-row-highlight" data-abscissa="{{ loop.index0 }}">{{_self.widget_field_option(fieldRow.option)}}</li>
                    {% endfor %}

                    <li class="vic-table-square table-column-placeholder" id="vic-table-square-corner"></li>
                </ul>
            </li>
        </ul>
        {{form_widget(form.fullWidth)}}
    </div>

    <div class="hidden">
        {{ form_row(form.rows) }}
        {{ form_row(form.columnFields) }}
    </div>

    <div class="vic-alert vic-alert-info vic-alert-dismissible">
        <strong>{{'widget.table.help.title'|trans}}</strong>
        <br>
        {{'widget.table.help.content'|trans}}
    </div>


    {{ form_end(form) }}

</div>






<div class="hidden" id="prototype-delete-row">
    <li class="vic-table-square -action" data-ordered="__ORDERED__">
        {% spaceless %}
            <button class="table-btn -remove table-delete-row" data-ordered="__ORDERED__">
                <i class="fa fa-minus-square-o"></i>
            </button>
            <div class="table-btn -remove table-move-up-row" data-abscissa="__ORDERED__">
                <i class="fa fa-arrow-up"></i>
            </div>
            <div class="table-btn -remove table-move-down-row" data-abscissa="__ORDERED__">
                <i class="fa fa-arrow-down"></i>
            </div>
        {% endspaceless %}
    </li>
</div>

<div class="hidden" id="prototype-field-row">
    <li class="vic-table-square -field" data-ordered="__ORDERED__"></li>
</div>

<div class="hidden" id="prototype-placeholder-row">
    <li class="vic-table-square table-placeholder-row table-column-highlight" data-ordered="__ORDERED__"></li>
</div>

<div class="hidden" id="prototype-delete-column">
    <li class="vic-table-square -action" data-abscissa="__ABSCISSA__">
        {% spaceless %}
            <div class="table-btn -remove table-move-left-column" data-abscissa="__ABSCISSA__">
                <i class="fa fa-arrow-left"></i>
            </div>
            <button class="table-btn -remove table-delete-column" data-abscissa="__ABSCISSA__">
                <i class="fa fa-minus-square-o"></i>
            </button>
            <div class="table-btn -remove table-move-right-column" data-abscissa="__ABSCISSA__">
                <i class="fa fa-arrow-right"></i>
            </div>
        {% endspaceless %}
    </li>
</div>

<div class="hidden" id="prototype-field-column">
    <li class="vic-table-square -field" data-abscissa="__ABSCISSA__"></li>
</div>

<div class="hidden" id="prototype-placeholder-column">
    <li class="vic-table-square table-placeholder-column vic-table-row-highlight" data-abscissa="__ABSCISSA__"></li>
</div>

<div class="hidden" id="prototype-value">
    {% spaceless %}
    <li class="vic-table-square vic-table-square-value" data-ordered="__ORDERED__" data-abscissa="__ABSCISSA__">
        Value
    </li>
    {% endspaceless %}
</div>

{% macro widget_prototype(form, loop) %}
    {% if loop %}
        {% set ordered = loop.index0 %}
    {% else %}
        {% set ordered = "__ORDERED__" %}
    {% endif %}

    {% for key, item in form %}
        {% if key == "name" %}
            <li class="vic-table-square -field" data-ordered="{{ ordered }}">
                {{ form_widget(form.name) }}
            </li>
        {% endif %}

        {% if key == "values" %}
            {% for value in form.values %}
                {{ _self.widget_value_prototype(value, loop, ordered) }}
            {% endfor %}
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro widget_value_prototype(form, loop, ordered) %}
    {% if loop %}
        {% set abscissa = loop.index0 %}
    {% else %}
        {% set abscissa = "__ABSCISSA__" %}
    {% endif %}

    <li class="vic-table-square vic-table-square-value" data-ordered="{{ ordered|default('__ORDERED__') }}" data-abscissa="{{ abscissa }}">
        {{ form_widget(form.val) }}
    </li>
{% endmacro %}

{% macro widget_field_option(form) %}
    <div class="text-center table-popover-field">
        <div class="table-option-percent">
            <div class="table-option-percent-value">
                {{form.percent.vars.value}}
            </div>
            <div class="table-option-percent-form">
                {{form_widget(form.percent)}}
            </div>
        </div>

    </div>
{% endmacro %}

<script type="text/javascript">
    var buttons =
    [
        'bold', 'italic', 'deleted','unorderedlist', 'orderedlist', 'link', 'alignment', 'fontcolor', 'backcolor', 'fontsize', 'fontfamily'
    ];
    $(document).ready(function() {
        $('form[name="{{ form.vars.name }}"] .vic-table-value').each(function(){
            loadRedactor{{ form.vars.id }}(this, 'hidden');
        });
        $('form[name="{{ form.vars.name }}"] .table-option-percent').each(function(){
            var percentForm = $(this).children('.table-option-percent-form');
            $(this).children('.table-option-percent-value').editable({
                type: 'text',
                emptytext: '{{"widget.table.width.empty"|trans}}',
                placement: 'bottom',
                success: function(response, newValue){
                    $(this).siblings('.table-option-percent-form').children('input').val(newValue);
                }
            });
        });
        $('form[name="{{ form.vars.name }}"] .table-delete-row').on('click', function(e){
            e.preventDefault();
            var ordered = $(this).data('ordered');
            $('form[name="{{ form.vars.name }}"] *[data-ordered="' + ordered + '"]:not(#table-data)').remove();
            updateNextIndexes{{ form.vars.id }}('ordered', ordered);
        });
        $('form[name="{{ form.vars.name }}"] .table-delete-column').on('click', function(e){
            e.preventDefault();
            var abscissa = $(this).data('abscissa');
            $('form[name="{{ form.vars.name }}"] *[data-abscissa="' + abscissa + '"]:not(#table-data)').remove();
            updateNextIndexes{{ form.vars.id }}('abscissa', abscissa);
        });

        $('form[name="{{ form.vars.name }}"] #table-add-row-btn').on('click', function(e){
            e.preventDefault();
            var numberColumn = $('form[name="{{ form.vars.name }}"] #table-data').data('abscissa');
            var newRow = $(setCoordinate{{ form.vars.id }}('<li data-ordered="__ORDERED__"><ul class="vic-table-row"></ul></li>'));
            var newRowContainer = newRow.children('ul');
            var newDeleteRow = setCoordinate{{ form.vars.id }}($('#prototype-delete-row').html());
            var newFieldRow = $(setCoordinate{{ form.vars.id }}($('#prototype-field-row').html()));
            var newPlaceholderRow = setCoordinate{{ form.vars.id }}($('#prototype-placeholder-row').html());
            var fieldRowPrototype = setCoordinate{{ form.vars.id }}($(this).data('prototype'));
            var valuePrototype = $(this).data('value-prototype');
            newRowContainer.append(newDeleteRow);
            newFieldRow.append($(fieldRowPrototype));
            newRowContainer.append(newFieldRow);
            for (var i = 0; i < numberColumn; i++) {
                var abscissa = i || '0';
                var newValue = setCoordinate{{ form.vars.id }}(valuePrototype, abscissa, null);
                newRowContainer.append($(newValue));
            }
            newRowContainer.append(newPlaceholderRow);
            $(newRow).insertBefore($('form[name="{{ form.vars.name }}"] #vic-table-row-placeholder').parent('li'));

            $('form[name="{{ form.vars.name }}"] .vic-table-square[data-ordered="' + $('#table-data').data('ordered') + '"] .vic-table-value').each(function(){
                loadRedactor{{ form.vars.id }}(this, 'hidden');
            });

            $(newRow).find('.table-delete-row').on('click', function(){
                var ordered = $(this).data('ordered');
                $('form[name="{{ form.vars.name }}"] *[data-ordered="' + ordered + '"]:not(#table-data)').remove();
                updateNextIndexes{{ form.vars.id }}('ordered', ordered);

            });
            updateData{{ form.vars.id }}('ordered');
        });
        $('form[name="{{ form.vars.name }}"] #table-add-column-btn').on('click', function(e){
            e.preventDefault();
            var numberRow = $('form[name="{{ form.vars.name }}"] #table-data').data('ordered');
            var valuePrototype = $('form[name="{{ form.vars.name }}"] #table-add-row-btn').data('value-prototype');

            var newPlaceholderColumn = setCoordinate{{ form.vars.id }}($('#prototype-placeholder-column').html());
            var optionPrototype = setCoordinate{{ form.vars.id }}($(this).data('option-prototype'));
            placeholderPrototype = $(newPlaceholderColumn);
            placeholderPrototype.append(optionPrototype);

            placeholderPrototype.find('.table-option-percent').each(function(){
                var percentForm = $(this).children('.table-option-percent-form');
                $(this).children('.table-option-percent-value').editable({
                    type: 'text',
                    emptytext: '{{"widget.table.width.empty"|trans}}',
                    placement: 'bottom',
                    success: function(response, newValue){
                        $(this).siblings('.table-option-percent-form').children('input').val(newValue);
                    }
                });
            });
            placeholderPrototype.insertBefore($('form[name="{{ form.vars.name }}"] #vic-table-square-corner'));
            $('form[name="{{ form.vars.name }}"] #table .table-placeholder-row').each(function(){
                var ordered = ($(this).data('ordered') || '0' );
                var newValue = setCoordinate{{ form.vars.id }}(valuePrototype, null, ordered);
                $(newValue).insertBefore($(this));
            });
            var fieldColumnPrototype = $(setPosition{{ form.vars.id }}(setCoordinate{{ form.vars.id }}($(this).data('prototype')), 'abscissa'));
            var newFieldColumn = $(setCoordinate{{ form.vars.id }}($('#prototype-field-column').html()));
            newFieldColumn.append(fieldColumnPrototype);
            newFieldColumn.insertBefore($('form[name="{{ form.vars.name }}"] #table-row-field-placeholder'));
            var newDeleteColumn = $(setCoordinate{{ form.vars.id }}($('#prototype-delete-column').html()));
            newDeleteColumn.insertBefore($('form[name="{{ form.vars.name }}"] #table-add-column'));

            $('form[name="{{ form.vars.name }}"] .vic-table-square[data-abscissa="' + $('#table-data').data('abscissa') + '"] .vic-table-value').each(function(){
                loadRedactor{{ form.vars.id }}(this, 'hidden');
            });

            newDeleteColumn.find('.table-delete-column').on('click', function(){
                var abscissa = $(this).data('abscissa');
                $('form[name="{{ form.vars.name }}"] *[data-abscissa="' + abscissa + '"]:not(#table-data)').remove();
                updateNextIndexes{{ form.vars.id }}('abscissa', abscissa);
            });
            updateData{{ form.vars.id }}('abscissa');
        });
    });

    function loadRedactor{{ form.vars.id }}(elem, toolbarClass)
    {
        if(toolbarClass === "undefined"){
            toolbarClass = '';
        }

        var id = $(elem).context.id;
        if ( $('form[name="{{ form.vars.name }}"] #values-redactor-toolbar-' + id).length == 0)
        {
            $('form[name="{{ form.vars.name }}"] #values-redactor-toolbar').append("<div id=\"values-redactor-toolbar-" + id + "\" class=\"values-redactor-toolbar-container " + toolbarClass + "\"></div>");
        }
        $('form[name="{{ form.vars.name }}"] #' + id).redactor({
            buttons : buttons,
            maxHeight: 36,
            minHeight: 36,
            focus: true,
            blurCallback : function(){
                $('.values-redactor-toolbar-container').addClass('hidden');
            },
            focusCallback : function(){
                $('.values-redactor-toolbar-container').addClass('hidden');
                $('form[name="{{ form.vars.name }}"] #values-redactor-toolbar-' + id).removeClass('hidden');
            },
            plugins : ['fontcolor', 'fontfamily', 'fontsize'],
            toolbarExternal: 'form[name="{{ form.vars.name }}"] #values-redactor-toolbar-'+ id
        });
    }

    /**
     * Move a row | column to a direction
     * @param direction
     * @param elem
     */
    function moveTable{{ form.vars.id }}(direction, elem){
        console.log('move');
        var elemToMove = $(elem).parents('.vic-table-square')[0];
        var index = 0;
        var indexToSwitch = 0;
        var dataToUse = "";
        var dataToBrowse = "";
        var field = "";
        var allowToSwitch = false;
        switch (direction) {
            case "up":
            case "down":
                field = "textarea";
                dataToUse = "ordered";
                dataToBrowse ="abscissa";
                index = $(elemToMove).data(dataToUse);
                break;
            case "left":
            case "right":
                field = "textarea";
                dataToUse = "abscissa";
                dataToBrowse ="ordered";
                index = $(elemToMove).data(dataToUse);
                break;
        }
        switch (direction) {
            case "up":
            case "left":
                indexToSwitch = index - 1;
                allowToSwitch = indexToSwitch >= 0;
                break;
            case "down":
            case "right":
                indexToSwitch = index + 1;
                allowToSwitch = indexToSwitch < $('form[name="{{ form.vars.name }}"] #table-data').data(dataToUse);
                break;
        }
        if(allowToSwitch)
        {
            $('form[name="{{ form.vars.name }}"] .vic-table-square-value[data-' + dataToUse + '="' + index + '"]').each(function(i){
                var elemToSwitch = $('form[name="{{ form.vars.name }}"] .vic-table-square-value[data-' + dataToUse + '="' + indexToSwitch + '"][data-' + dataToBrowse + '="' + i + '"]');
                var elemToSwitchValue = elemToSwitch.find('textarea').redactor('code.get');
                elemToSwitch.find('textarea').redactor('code.set', $(this).find('textarea').redactor('code.get') );
                $(this).find('textarea').redactor('code.set', elemToSwitchValue );
            });

            var elemToSwitchField = $('form[name="{{ form.vars.name }}"] .vic-table-square.-field[data-' + dataToUse + '="' + indexToSwitch + '"]').find(field);
            var currentField = $('form[name="{{ form.vars.name }}"] .vic-table-square.-field[data-' + dataToUse + '="' + index + '"]').find(field);
            var elemToSwitchFieldValue = elemToSwitchField.redactor('code.get') ;

            elemToSwitchField.redactor('code.set', currentField.redactor('code.get'));
            currentField.redactor('code.set', elemToSwitchFieldValue);
        }
    }

    function setCoordinate{{ form.vars.id }}(prototype, abscissa, ordered) {
        var data = $('form[name="{{ form.vars.name }}"] #table-data');
        abscissa = abscissa || data.data('abscissa');
        ordered = ordered || data.data('ordered');
        prototype = replaceStringProto{{ form.vars.id }}('__ABSCISSA__', abscissa, prototype);
        prototype = replaceStringProto{{ form.vars.id }}('__ORDERED__', ordered, prototype);
        return prototype;
    }

    function setPosition{{ form.vars.id }}(prototype, type) {
        var data = $('form[name="{{ form.vars.name }}"] #table-data');
        switch(type){
            case 'ordered':
                return replaceStringProto{{ form.vars.id }}('__POSITION__', data.data('ordered'), prototype);
            break;
            case 'abscissa':
                return replaceStringProto{{ form.vars.id }}('__POSITION__', data.data('abscissa'), prototype);
            break;
            default:
        }
        return prototype;
    }

    /**
     * Replace the __ABCISSA__ prototype value into a dynamic value
     * @param proto
     * @param value
     * @param str
     * @returns {*}
     */
    function replaceStringProto{{ form.vars.id }}(proto, value, str) {
        return str.replace(new RegExp(proto, 'g'), value);
    }

    /**
     * Synchronize the index of each form type (abscissa or ordered) after moving down|up a row or column
     *
     * @param type
     */
    function updateData{{ form.vars.id }}(type) {
        var data = $('form[name="{{ form.vars.name }}"] #table-data');
        switch(type){
            case 'ordered':
                ordered = data.data('ordered');
                $('form[name="{{ form.vars.name }}"] #table-data').data('ordered', ordered + 1);
                $('form[name="{{ form.vars.name }}"] #table-data').attr('data-ordered', ordered + 1);
            break;
            case 'abscissa':
                abscissa = data.data('abscissa');
                $('form[name="{{ form.vars.name }}"] #table-data').data('abscissa', abscissa + 1);
                $('form[name="{{ form.vars.name }}"] #table-data').attr('data-abscissa', abscissa + 1);
            break;
            default:
        }
    }

    /**
     * update the index when removing a row or a column
     *
     * @param type
     * @param value
     */
    function updateNextIndexes{{ form.vars.id }}(type, value){
        var data = $('form[name="{{ form.vars.name }}"] #table-data');
        switch(type){
            case 'ordered':
                orderedMax = data.data('ordered');
                for (i = value ; i < orderedMax; i++) {
                    $('form[name="{{ form.vars.name }}"] *[data-ordered="' + i + '"]').each(function(){
                        var ordered = $(this).data('ordered') - 1;
                        $(this).data('ordered', ordered);
                        $(this).attr('data-ordered', ordered);
                    });
                }
                orderedMax = (orderedMax - 1);
                data.data('ordered', orderedMax);
                data.attr('data-ordered', orderedMax);
            break;
            case 'abscissa':
                abscissaMax = data.data('abscissa');
                for (i = value; i < abscissaMax; i++) {
                    $('form[name="{{ form.vars.name }}"] *[data-abscissa="' + i + '"]').each(function(){
                        var abscissa = $(this).data('abscissa') - 1;
                        $(this).data('abscissa', abscissa);
                        $(this).attr('data-abscissa', abscissa);
                    });
                }
                abscissaMax = (abscissaMax - 1);
                data.data('abscissa', abscissaMax);
                data.attr('data-abscissa', abscissaMax);
            break;
            default:
        }

    }

    $(document).on('click','form[name="{{ form.vars.name }}"] .table-move-right-column', function(event){
        var column = $(this).parents('.vic-table-square')[0];
        var abscissa = $(column).data('abscissa');

        if(abscissa < $('form[name="{{ form.vars.name }}"] #table-data').data('abscissa')){
            moveTable{{ form.vars.id }}("right", this);
        }
    });

    $(document).on('click','form[name="{{ form.vars.name }}"] .table-move-left-column', function(){
        var column = $(this).parents('.vic-table-square')[0];
        var abscissa = $(column).data('abscissa');

        if(abscissa > 0){
            moveTable{{ form.vars.id }}("left", this);
        }
    });

    $(document).on('click','form[name="{{ form.vars.name }}"] .table-move-up-row', function(){
        var row = $(this).parents('.vic-table-square')[0];
        var ordered = $(row).data('ordered');

        if(ordered > 0){
            moveTable{{ form.vars.id }}("up", this);
        }
    });

    $(document).on('click','form[name="{{ form.vars.name }}"] .table-move-down-row', function(){
        var row = $(this).parents('.vic-table-square')[0];
        var ordered = $(row).data('ordered');

        if(ordered < $('#table-data').data('ordered')){
            moveTable{{ form.vars.id }}("down", this);
        }
    });

    {% if form.vars.data.id is null %}
        var numberColumn = $('form[name="{{ form.vars.name }}"] #table-data').data('abscissa');
        var numberRow =  $('form[name="{{ form.vars.name }}"] #table-data').data('ordered');
        if (numberColumn < 2) {
            for (var i = numberColumn; i < 2; i++) {
                $('form[name="{{ form.vars.name }}"] #table-add-column-btn').click();
            }
        }
        if (numberRow < 2) {
            for (var i = numberRow; i < 2; i++) {
                $('form[name="{{ form.vars.name }}"] #table-add-row-btn').click();
            }
        }
    {% endif %}
</script>

<style>
    /**
     * Redactor hacks to get working with victoire modale
     */
    .redactor-toolbar-tooltip {
        z-index: 1104;
    }

    .redactor-box-fullscreen {
        z-index: 1101;
    }
    .redactor-toolbar {
        z-index: 1100;
    }
    .redactor-dropdown {
        z-index: 1102;
    }
    #redactor-modal-overlay,
    #redactor-modal-box,
    #redactor-modal {
        z-index: 1103;
    }
    <!-- END Redactor hacks -->
</style>
